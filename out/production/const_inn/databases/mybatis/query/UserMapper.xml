<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="databases.mybatis.mapper.UserMapper">

    <update id="turnOnPush">
        UPDATE tblUser SET `pushFlag`=1 WHERE `id`=#{id}
    </update>

    <update id="turnOffPush">
        UPDATE tblUser SET `pushFlag`=0 WHERE `id`=#{id}
    </update>

    <select id="getUserByPhone" resultType="DataMap">
        SELECT * FROM tblUser WHERE `phone` = #{phone} AND `status` = 1 LIMIT 1
    </select>

    <insert id="registerUserBasic">
        INSERT INTO tblUser(`name`, `account`, `password`, `phone`, `age`, `type`, `pushKey`, `pushFlag`, `regDate`, `status`)
        VALUES (
          #{name},
          #{account},
          #{password},
          #{phone},
          #{age},
          #{type},
          #{pushKey},
          1,
          NOW(),
          1
        )
        <selectKey keyProperty="id" resultType="Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="getUserByAccount" resultType="DataMap">
        SELECT * FROM tblUser WHERE `account` = #{account} AND `status` = 1 LIMIT 1
    </select>

    <insert id="setUserRegion">
        INSERT INTO tblUserRegion(`userId`, `sidoId`, `gugunId`, `regDate`)
        VALUES(
          #{userId},
          <choose>
              <when test="gugunId != 0">
                  (SELECT sidoID FROM tblZipGugun WHERE gugunID = #{gugunId}),
              </when>
              <when test="gugunId == 0">
                  0,
              </when>
          </choose>
          #{gugunId},
          NOW()
        )
    </insert>

    <insert id="setUserWork">
        INSERT INTO tblUserWork(`userId`, `workId`, `career`, `regDate`, `welderType`)
        VALUES (
          #{userId},
          #{workId},
          #{career},
          NOW(),
          #{welderType}
        )
    </insert>

    <insert id="setUserGear">
        INSERT INTO tblUserGear(`userId`, `gearId`, `attachment`)
        VALUES(#{userId},#{gearId},#{attachment})
    </insert>

    <insert id="registerSearchBasic">
        INSERT INTO tblSearch(
          `userId`,
          `type`,
          `sidoId`,
          `gugunId`,
          `name`,
          `startDate`,
          `endDate`,
          `lodging`,
          `price`,
          `discussLater`,
          `regDate`
        )
        VALUES(
          #{userId},
          #{type},
          #{sidoId},
          #{gugunId},
          #{name},
          #{startDate},
          #{endDate},
          #{lodging},
          #{price},
          #{discussLater},
          NOW()
        )
        <selectKey keyProperty="id" resultType="Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="setSearchWork">
        INSERT INTO tblSearchWork(`searchId`, `workId`, `career`, `welderType`, `regDate`)
        VALUES(
          #{searchId},
          #{workId},
          #{career},
          #{welderType},
          NOW()
        )
    </insert>

    <insert id="setSearchGear">
        INSERT INTO tblSearchGear(`searchId`, `gearId`, `attachment`, `regDate`)
        VALUES(
          #{searchId},
          #{gearId},
          #{attachment},
          NOW()
        )
    </insert>

    <select id="getUserIdByAccount" resultType="Integer">
        SELECT id FROM tblUser WHERE account = #{account} AND password = #{password}
    </select>

    <select id="getUserByAccountPass" resultType="DataMap">
        SELECT * FROM tblUser WHERE account = #{account} AND password = #{password} AND `status` = 1 LIMIT 1
    </select>

    <select id="getUserById" resultType="DataMap">
        SELECT * FROM tblUser WHERE `id`=#{id} LIMIT 1
    </select>

    <select id="getUserRegion" resultType="DataMap">
        SELECT
          *,
          CASE R.gugunId WHEN 0 THEN "전국"
          ELSE (SELECT description FROM tblZipGugun G WHERE R.gugunId = G.gugunID)
          END AS gugunTxt
        FROM tblUserRegion R
        WHERE `userId` = #{userId}
    </select>

    <select id="getUserGear" resultType="DataMap">
        SELECT *
        FROM tblUserGear UG JOIN tblGearType GT ON UG.gearId = GT.id
        WHERE `userId` = #{userId}
    </select>

    <select id="getUserWork" resultType="DataMap">
        SELECT *
        FROM tblUserWork UW
        JOIN tblWork W
        ON UW.workId = W.id
        WHERE `userId` = ${userId}
    </select>

    <select id="findManMatch" resultType="DataMap">
        SELECT userId, gugunId, (SELECT pushKey FROM tblUser U WHERE userId = U.id) pushKey
        FROM
        (
            SELECT userId, gugunId
            FROM tblUserRegion
            WHERE userId IN
            (
              SELECT userId FROM tblUserWork UW
              WHERE (UW.workId, UW.career, UW.welderType) IN
              (SELECT workId, career, welderType FROM tblSearchWork WHERE searchId = #{searchId})
            )
        ) tmp
        WHERE gugunId = #{gugunId} AND (SELECT pushFlag FROM tblUser U WHERE userId = U.id) = 1
        <if test="allType == 1">
            OR gugunId = 0
        </if>
    </select>

    <select id="findGearMatch" resultType="DataMap">
        SELECT userId, gugunId, (SELECT pushKey FROM tblUser U WHERE userId = U.id) pushKey
        FROM
        (
          SELECT userId, gugunId
          FROM tblUserRegion
          WHERE userId IN
          (
            SELECT userId
            FROM tblUserGear
            WHERE gearId = #{gearId} AND (
        <foreach item="item" index="index" collection="attachmentArr" open="" separator=" " close="">
            attachment LIKE concat('%', #{item}, '%') AND
        </foreach>
            1 = 1
            )
        )
        ) tmp
        WHERE gugunId = #{gugunId} AND (SELECT pushFlag FROM tblUser U WHERE userId = U.id) = 1
    </select>

    <update id="updatePushKey">
        UPDATE tblUser
        SET pushKey = #{pushKey}
        WHERE id = #{id}
    </update>

    <select id="getSearchBasicInfo" resultType="DataMap">
        SELECT
          *,
          (SELECT description FROM tblZipGugun WHERE gugunID = S.gugunId) as gugunText,
          (SELECT abbreviation FROM tblZipSido WHERE sidoID = S.sidoId) as sidoText
        from tblSearch S WHERE id = #{searchId}
    </select>

    <select id="getSearchManInfo" resultType="DataMap">
        SELECT *, (SELECT `name` FROM tblWork W WHERE W.id = workId) as name
        from tblSearchWork
        WHERE searchId = #{searchId}
    </select>

    <select id="getSearchGearInfo" resultType="DataMap">
        SELECT *
        FROM tblSearchGear SG JOIN tblGearType GT ON SG.gearId = GT.id
        WHERE searchId = #{searchId}
    </select>

    <delete id="deleteUserRegion">
        DELETE FROM tblUserRegion
        WHERE userId = #{id}
    </delete>

    <delete id="deleteUserWork">
        DELETE FROM tblUserWork
        WHERE userId = #{id}
    </delete>

    <delete id="deleteUserGear">
        DELETE FROM tblUserGear
        WHERE userId = #{id}
    </delete>

    <insert id="applySearch">
        INSERT INTO tblApply(`userId`, `searchId`, `regDate`)
        VALUES(
          #{userId},
          #{searchId},
          NOW()
        )
    </insert>

    <update id="updateUserName">
        UPDATE tblUser
        SET
          `name` = #{name}
        WHERE `id` = #{userId}
    </update>

    <update id="withdrawUser">
        UPDATE tblUser
        SET
          `status` = 0
        WHERE `id` = #{userId}
    </update>

    <select id="getUserByNamePhone" resultType="DataMap">
        SELECT *
        FROM tblUser
        WHERE `name` = #{name} AND `phone` = #{phone} AND `status` = 1
        LIMIT 1
    </select>

    <select id="getUserByAccountPhone" resultType="DataMap">
        SELECT *
        FROM tblUser
        WHERE `name` = #{name} AND `phone` = #{phone} AND `account` = #{account} AND `status` = 1
        LIMIT 1
    </select>

    <update id="changePassword">
        UPDATE tblUser
        SET `password`=#{pw}
        WHERE `id`=#{id}
    </update>

    <update id="updateUserImg">
        UPDATE tblUser
        SET `imgPath` = #{imgPath}
        WHERE `id` = #{id}
    </update>

    <select id="getUserPoint" resultType="Integer">
        SELECT SUM(inc) as totalPoint
        FROM tblPoint
        WHERE userId = #{id} AND `status` = 1
    </select>

    <insert id="addPointHistory">
        INSERT INTO tblPoint(`userId`, `inc`, `payType`, `paymentId`, `comment`)
        VALUES(
          #{id},
          #{inc},
          #{payType},
          #{paymentId},
          #{comment}
        )
    </insert>

    <select id="getPointList" resultType="DataMap">
        SELECT *
        FROM tblPoint
        WHERE `userId` = #{id} AND exposed = 1
        ORDER BY regDate DESC
    </select>

    <select id="getApplyList" resultType="DataMap">
        SELECT *, S.userId as searchUserId
        FROM tblApply A JOIN tblSearch S ON A.searchId = S.id
        WHERE A.userId = #{id} AND hideFlag = 0
        ORDER BY A.regDate DESC
    </select>

    <select id="getPaymentStatus" resultType="Integer">
        SELECT SUM(bl) > 0 AS ret
        FROM
        (
          SELECT `id`, (`id`=#{searchId}) AS bl
          FROM tblSearch
          WHERE userId = #{searchUserId} LIMIT #{start}, #{end}
        ) AS temp
    </select>

    <update id="saveComment">
        UPDATE tblSearch
        SET `comment` = #{comment}
        WHERE `id` = #{searchId}
    </update>

    <select id="getAppLimit" resultType="DataMap">
        SELECT
          SUM(amount) as `end`,
          (
              select
                sum(amount)
              FROM tblExposure
              where DATE_SUB(NOW(), INTERVAL 1 MONTH) > regDate
          ) as start
        FROM tblExposure
        WHERE userId = #{userId};
    </select>

    <select id="getAppCount" resultType="Integer">
        SELECT COUNT(*) as count
        FROM tblApply A
        WHERE A.searchId IN (SELECT `id` FROM tblSearch WHERE `userId` = #{userId})
    </select>

    <select id="getApps" resultType="DataMap">
        SELECT *
        FROM tblApply A join tblUser U ON A.userId = U.id
        WHERE A.searchId IN (SELECT `id` FROM tblSearch WHERE `userId` = #{userId})
        ORDER BY A.regDate ASC
    </select>
    <!--getApps의 LIMIT 제거, regDate ASC로 변경-->

    <update id="hidePointHistory">
        UPDATE tblPoint
        SET `exposed` = 0
        WHERE `id` = #{id}
    </update>

    <update id="hideApplyHistory">
        UPDATE tblApply
        SET `hideFlag` = 1
        WHERE `searchId` = #{id}
    </update>

    <select id="getAppCountBySearchId" resultType="Integer">
        SELECT COUNT(*) as count
        FROM tblApply
        WHERE searchId = #{searchId}
    </select>

    <insert id="addExposure">
        INSERT INTO tblExposure(`userId`, `amount`, `regDate`)
        VALUES(
          #{id},
          #{amount},
          NOW()
        )
    </insert>
</mapper>
